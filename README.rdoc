== SERIMI â€“ Resource Description Similarity, RDF Instance Matching and Interlinking  
   
The interlinking of datasets published in the Linked Data Cloud is a 
challenging problem and a key factor for the success of the Semantic Web. 
Manual rule-based methods are the most effective solution for the problem, but 
they require skilled human data publishers going through a laborious, error 
prone and time-consuming process for manually describing rules mapping 
instances between two datasets. Thus, an automatic approach for solving this 
problem is more than welcome. We propose a novel interlinking 
method, SERIMI, for solving this problem automatically. SERIMI matches 
instances between a source and a target datasets, without prior knowledge of the 
data, domain or schema of these datasets. Experiments conducted with 
benchmark collections demonstrate that our approach considerably outperforms 
state-of-the-art automatic approaches for solving the interlinking problem on 
the Linked Data Cloud. 

In this repository we encounter the SERIMI interlinking script. 
We also encounter the reference alignment for Dailymed-TCM that we fixed.

== Requirements 

=== 1. Data repository 
Serimi ONLY works over Virtuoso Sparql Endpoints. Therefore, you need to load your data on a Virtuoso Openlink server ({download here}[http://sourceforge.net/projects/virtuoso/files/]) if you want to use this tool.

How To Load RDF Data into Virtuoso?

This example assumes that you are loading the Geonames into Virtuoso.  

Note that virtuoso does not have a repository for each dataset. It has just a repository and it organizes the datasets in NAMED GRAPH. The example below, load data into the http://geonames.org Named Graph.

ALL COMMANDS ARE COMPULSORY 

 checkpoint_interval(-1);
 DB.DBA.RDF_OBJ_FT_RULE_ADD (null, null, 'index_local');
 DB.DBA.VT_INC_INDEX_DB_DBA_RDF_OBJ ();	
 CREATE BITMAP index RDF_QUAD_POGS on DB.DBA.RDF_QUAD (P,O,G,S);
 CREATE BITMAP index RDF_QUAD_PSOG on DB.DBA.RDF_QUAD (P,S,O,G);
 CREATE BITMAP index RDF_QUAD_SOPG on DB.DBA.RDF_QUAD (S,O,P,G);	
 //For RDF format
 DB.DBA.RDF_LOAD_RDFXML_MT (file_to_string_output ('/tmp/all-geonames.rdf'), '', 'http://geonames.org');	
 //For NT format
 DB.DBA.TTLP_MT (file_to_string_output ('/tmp/all-geonames.ttl'), '','http://geonames.org');
 checkpoint;
 checkpoint_interval(30);

=== 2. JRuby

Serimi is a Ruby application and demands the Jruby version of ruby. We recommend to install JRuby using the RVM[https://rvm.beginrescueend.com/].

=== 3. Gems

After install JRuby, you have to install the following gems in order to make Serimi works properly:

* actionmailer (2.3.2)
* actionpack (2.3.2)
* activerecord (2.3.2)
* activeresource (2.3.2)
* activesupport (2.3.2)
* amatch (0.2.5)
* bouncy-castle-java (1.5.0146.1)
* elasticsearch (0.0.0)
* jruby-launcher (1.0.7 java)
* jruby-openssl (0.7.4)
* json (1.5.1 java)
* OptionParser (0.5.1)
* patron (0.4.9)
* rails (2.3.2)
* rake (0.8.7)
* sources (0.0.1)
* Text (1.1.2)
* text (0.2.0)
* uuidtools (1.0.7)
* xml-object (0.9.93)
* yajl-ruby (0.8.2)

<b>IMPORTANT:</b>
You MUST install the uuidtools version 1.0.7

gem install uuidtools -v=1.0.7

== Usage

Usage: serimi.rb [options] 

Example of use: 

 ruby serimi.rb -s http://localhost:8890/sparql -t http://dbpedia.org/sparql?default-graph-uri=http://dbpedia.org
 -c http://www.semwebtech.org/mondial/10/meta#Country 

In the example above, the source is a local endpoint http://localhost:8890/sparql, the target is the DBPedia endpoint http://dbpedia.org/sparql?default-graph-uri=http://dbpedia.org, and the source class to be interlinked is the class country, represented by the URL: http://www.semwebtech.org/mondial/10/meta#Country. 

Parameters
    -v, --verbose                    Output more information
    -s, --source SPARQL_URI          Source Virtuoso sparql endpoint - URI
    -t, --target SPARQL_URI          Target Virtuoso sparql endpoint - URI
    -c, --class URI                  Source class for interlink - URI
    -o, --output FILE                Write output to FILE - Default=./output.txt
    -f, --output-format value        Output format: txt, nt. Default=txt
    -k, --chunk value                Chunk size - Default=20
    -b, --offset value               Start processing from a specific offset - Default=0
    -x, --string-threshold value     String distance threshold. A value between [0,1] - Default=0.7
    -y, --rds-threshold value        RDS threshold. A value between [0,1] - Default=max(media,mean)
    -l, --logfile FILE               Write log to FILE
    -h, --help                       Display this screen

TO BE UPDATED